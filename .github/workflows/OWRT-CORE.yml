#云编译公用核心
name: OWRT-CORE

on:
  #公用核心标识
  workflow_call:
    inputs:
      OWRT_TARGET:
        required: true
        type: string
      OWRT_THEME:
        required: true
        type: string
      OWRT_NAME:
        required: true
        type: string
      OWRT_URL:
        required: true
        type: string
      OWRT_PW:
        required: true
        type: string
      OWRT_IP:
        required: true
        type: string
      OWRT_CFG:
        required: true
        type: string
      OWRT_BRANCH:
        required: true
        type: string
      OWRT_TYPE:
        required: true
        type: string
      OWRT_LINUX:
        required: true
        type: string     
env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  OWRT_TARGET: ${{inputs.OWRT_TARGET}}
  OWRT_THEME: ${{inputs.OWRT_THEME}}
  OWRT_NAME: ${{inputs.OWRT_NAME}}
  OWRT_URL: ${{inputs.OWRT_URL}}
  OWRT_PW: ${{inputs.OWRT_PW}}
  OWRT_IP: ${{inputs.OWRT_IP}}
  OWRT_CFG: ${{inputs.OWRT_CFG}}
  OWRT_BRANCH: ${{inputs.OWRT_BRANCH}}
  OWRT_TYPE: ${{inputs.OWRT_TYPE}}
  OWRT_LINUX: ${{inputs.OWRT_LINUX}}
  TZ: Asia/Shanghai
  #USE_CACHEWRTBUILD: true
  
jobs:
  owrt_core_source:
    runs-on: ubuntu-latest
    
    steps:
    
      - name: 清理服务器空间(Ubuntu)
        uses: rmoyulong/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: true

          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          swap-storage: true
        
      - name: 项目检查
        uses: actions/checkout@main

      - name: 检查分配的服务器性能
        run: |
          echo "警告⚠"
          echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
          echo -e "已知CPU型号（降序）：7763，8370C，8272CL，8171M，E5-2673 \n"
          echo "--------------------------CPU信息--------------------------"
          echo "CPU物理数量：$(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)"
          echo -e "CPU核心信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
          echo "--------------------------内存信息--------------------------"
          echo "已安装内存详细信息："
          echo -e "$(sudo lshw -short -C memory | grep GiB) \n"
          echo "--------------------------硬盘信息--------------------------"
          echo "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT        
          
      - name: 初始化编译环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E apt-get -qq update --fix-missing
          sudo -E apt-get -qq full-upgrade
          sudo -E apt-get -qq install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential \
          bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
          git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
          libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
          mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils \
          rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev dos2unix
          sudo -E apt-get -qq install time gn
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdirmo
          sudo chown $USER:$GROUPS /workdirmo
          echo "status=success" >> ${GITHUB_OUTPUT}
          df -Th        

      - name: 初始化变量
        run: |
          export OWRT_DATE=$(TZ=UTC-8 date +"%y.%m.%d_%H.%M.%S")
          export OWRT_SOURCE=$(echo $OWRT_URL | cut -d '/' -f 5-)
          #export OWRT_TYPE="cortex-a53"
          
          echo "OWRT_SOURCE=$OWRT_SOURCE" >> $GITHUB_ENV
          echo "OWRT_TARGET=$OWRT_TARGET" >> $GITHUB_ENV
          echo "OWRT_DATE=$OWRT_DATE" >> $GITHUB_ENV
          echo "OWRT_TYPE=$OWRT_TYPE" >> $GITHUB_ENV
          echo "OWRT_PW=$OWRT_PW" >> $GITHUB_ENV
          echo "OWRT_IP=$OWRT_IP" >> $GITHUB_ENV
          echo "OWRT_LINUX=$OWRT_LINUX" >> $GITHUB_ENV
          echo "OWRT_CFG=$OWRT_CFG" >> $GITHUB_ENV

      - name: 检查脚本
        run: |
          cd ./Scripts

          dos2unix ./*.sh
          chmod +x ./*.sh

      - name: 克隆源码库
        working-directory: /workdirmo
        run: |
          df -hT $PWD
          #git clone $OWRT_URL -b $OWRT_BRANCH --single-branch openwrt
          git clone $OWRT_URL -b $OWRT_BRANCH openwrt
          #git clone $OWRT_URL openwrt
          ln -sf /workdirmo/openwrt $GITHUB_WORKSPACE/openwrt
          [ -e $GITHUB_WORKSPACE/Config/$OWRT_CFG ] && echo "DEVICE_NAME=$(grep '^CONFIG_TARGET_.*_.*_DEVICE_.*=y' $GITHUB_WORKSPACE/Config/$OWRT_CFG | sed -r 's/.*DEVICE_(.*)=y/\1/')" >> $GITHUB_ENV
          
          #根据源码来修改
          if [[ $OWRT_URL == *"coolsnowwolf/lede"* ]] ; then
            # 2023-06-16 临时处理，回滚代码，等无线问题解决
            cd openwrt
            git checkout 26f3634631244eedfbdfd61ea6cc3a2d7f5d896f
            git checkout -b 26f363463
            #git reset --hard 26f3634631244eedfbdfd61ea6cc3a2d7f5d896f
          fi


      #添加红米ax6 编译选项
      - name: 修复AX6驱动
        run: |
         
          #if [[ $OWRT_URL == *"coolsnowwolf/lede"* ]] ; then
            cp -rf $GITHUB_WORKSPACE/ax6/generic.mk openwrt/target/linux/ipq807x/image/generic.mk
            echo 'coolsnowwolf：已修复AX6驱动!'
          #fi 
          
          #if [[ $OWRT_URL == *"Cathgao/openwrt"* ]] ; then
            #cp -rf $GITHUB_WORKSPACE/ax6/generic.mk openwrt/target/linux/ipq807x/image/generic.mk
            #cp -rf $GITHUB_WORKSPACE/revert/package/firmware/ipq-wifi/* openwrt/package/firmware/ipq-wifi/
            #echo 'Cathgao：已修复AX6驱动!'
          #fi         

      - name: 加载自定义订阅源
        run: |
          cd openwrt
          
          if [[ "${{ inputs.OWRT_CFG }}" == *"redmi_ax6-5.15.config"* ]]; then
            echo 'src-git smallpackeges https://github.com/Glunefish/small-package.git' >> feeds.conf.default
          else
            echo 'src-git small https://github.com/kenzok8/small' >> feeds.conf.default
            echo 'src-git kenzok8 https://github.com/kenzok8/openwrt-packages' >> feeds.conf.default
          fi
          
          echo "COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: 启动缓存[第二次起生效]
        uses: rmoyulong/cachewrtbuild@main
        with:
          ccache: 'true'
          prefix: ${{ github.workspace }}/openwrt
          mixkey: ${{ env.OWRT_URL }}/tree/${{ env.OWRT_BRANCH }}?device=${{ env.DEVICE_NAME }}-${{ env.OWRT_LINUX }} 

      - name: 更新订阅源
        run: |
          cd openwrt
          dos2unix ./scripts/*.sh
          chmod +x ./scripts/*.sh
          chmod +x ./scripts/*.*
          chmod +x ./scripts/*
          chmod +x ./scripts/feeds
          chmod +x ./config/*.*
          
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 自定义脚本
        run: |
          cd openwrt
          
          cp -rf $GITHUB_WORKSPACE/ax6/banner package/base-files/files/etc/banner
          $GITHUB_WORKSPACE/Scripts/Settings.sh
          
          cd ./package
          $GITHUB_WORKSPACE/Scripts/Plugins.sh

      - name: 自定义设置
        run: |
          [ -e files ] && mv files openwrt/files
          cd openwrt
          
          #if [[ $OWRT_CFG == *"redmi_ax6.config"* ]] ; then
            #rm -rf feeds/routing/batman-adv
          #fi
          
          rm -rf ./tmp* ./.config*
          #rm -rf $(find ./ -type f -iname "*.config*")*          
          #make dirclean
          [ -e $GITHUB_WORKSPACE/Config/$OWRT_CFG ] && mv $GITHUB_WORKSPACE/Config/$OWRT_CFG .config
          make defconfig

      - name: 下载编译依赖
        working-directory: ./openwrt
        run: |
          make download -j$(nproc)
          #make download -j8
          #make -j16 download
          find dl -size -1024c -exec ls -l {} \;
          find dl -size -1024c -exec rm -f {} \;

      - name: 编译固件
        working-directory: ./openwrt
        run: |     
          echo -e "$(nproc) thread compile"
          make -j$(nproc) || make -j1 || make -j1 V=s
          echo "status=success" >> $GITHUB_OUTPUT
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV  

      - name: 整理固件
        run: |
          cd openwrt && mkdir ./upload
          
          rm -rf $(find ./bin/targets/ -iregex ".*\(json\|manifest\|buildinfo\|sha256sums\|packages\)$")
          cp -rf $(find ./bin/targets/ -type f -iname "*.*") ./upload/
          cp -rf ./.config ./upload/Config_"$OWRT_TARGET"_"$OWRT_SOURCE"_"$OWRT_DATE".txt
          
          cd ./upload
          $GITHUB_WORKSPACE/Scripts/Renames.sh

      - name: 生成固件标签
        uses: rmoyulong/action-gh-release@master
        with:
          tag_name: ${{env.OWRT_TARGET}}_${{env.OWRT_SOURCE}}_${{env.OWRT_DATE}}
          files: openwrt/upload/*.*
          body: |
            自用AX6固件！刷机有风险！
            有一定几率变砖，刷前需谨慎！

            源码：${{env.OWRT_SOURCE}}
            平台：${{env.OWRT_TARGET}}
            设备：${{env.OWRT_TYPE}}
            密码：${{env.OWRT_PW}}
            地址：${{env.OWRT_IP}}
            内核：${{env.OWRT_LINUX}}

      - name: 清理Releases
        uses: rmoyulong/delete-older-releases@master
        with:
          keep_latest: 6
          delete_tags: true

      - name: 清理Workflows
        uses: rmoyulong/delete-workflow-runs@main
        with:
          retain_days: 0
          keep_minimum_runs: 1
