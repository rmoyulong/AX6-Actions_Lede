#========================================================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description: Use Releases file to packaging
# Cron: min (0 - 59) / hour (0 - 23) / day of month (1 - 31) / month (1 - 12) / day of week (0 - 6)(Sunday - Saturday)
#========================================================================================================================
name: 自用源打包脚本 [lede-6.1-nss]

on:
  #对应的是 UTC 时间，需要转换，0 代表北京时间8点，每天10点编译一次
  #关闭则手动编译
  workflow_dispatch:
  #schedule:
    #- cron: 0 2 * * *

env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: Config/quicker.config
  #DIY_P1_SH: sh/quick.sh
  DIY_P1_SH: sh/immortalwrt.sh
  DIY_P2_SH: sh/lean2.sh
  DIY_P3_SH: sh/remove.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  OWRT_IP: 192.168.1.110
  OWRT_NAME: package
  OWRT_FILES: package/files
  TZ: Asia/Shanghai

jobs:
  build_burn_onecloud_quick:
    runs-on: ubuntu-latest

    steps:
    - name: 检查项目
      uses: actions/checkout@main
 
    - name: 检查分配的服务器性能
      run: |
        echo "警告⚠"
        echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
        echo -e "已知CPU型号（降序）：7763，8370C，8272CL，8171M，E5-2673 \n"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量：$(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)"
        echo -e "CPU核心信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "--------------------------内存信息--------------------------"
        echo "已安装内存详细信息："
        echo -e "$(sudo lshw -short -C memory | grep GiB) \n"
        echo "--------------------------硬盘信息--------------------------"
        echo "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT 

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install $(cat $GITHUB_WORKSPACE/Ubuntu-2204.txt)
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          echo "status=success" >> ${GITHUB_OUTPUT}
          df -Th

    - name: 初始化变量
      run: |
          export OWRT_DATE=$(TZ=UTC-8 date +"%y.%m.%d_%H.%M.%S")
          export OWRT_SOURCE=$(echo $REPO_URL | cut -d '/' -f 5-)
          #export OWRT_TYPE="cortex-a53"

          echo "OWRT_URL=$REPO_URL" >> $GITHUB_ENV
          echo "OWRT_BRANCH=$REPO_BRANCH" >> $GITHUB_ENV
          echo "OWRT_DATE=$OWRT_DATE" >> $GITHUB_ENV
          echo "OWRT_SOURCE=$OWRT_SOURCE" >> $GITHUB_ENV
          echo "OWRT_TYPE=$OWRT_TYPE" >> $GITHUB_ENV
          echo "OWRT_NAME=$OWRT_NAME" >> $GITHUB_ENV
          echo "OWRT_IP=$OWRT_IP" >> $GITHUB_ENV
          echo "DIY_P1_SH=$DIY_P1_SH" >> $GITHUB_ENV
          echo "DIY_P2_SH=$DIY_P2_SH" >> $GITHUB_ENV
          echo "DIY_P3_SH=$DIY_P3_SH" >> $GITHUB_ENV
          echo "OWRT_CFG=$CONFIG_FILE" >> $GITHUB_ENV
          echo "OWRT_FILES=$OWRT_FILES" >> $GITHUB_ENV
    
    - name: 检查脚本
      run: |
        cd ./Scripts

        dos2unix ./*.sh
        chmod +x ./*.sh

    - name: 克隆源仓库
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        
    - name: 打包自定义订阅源
      run: |
        git clone -q --single-branch --depth=1 --branch=master https://github.com/immortalwrt/immortalwrt immortalwrt
        git clone -q --single-branch --depth=1 --branch=master https://github.com/coolsnowwolf/lede lede
        
        #建立上传目录
        mkdir -p outfile
        
        #公用函数
        source $GITHUB_WORKSPACE/Scripts/functions.sh
        
        #建立打包目录
        mkdir -p package_file
        cd package_file
        ##########################################################################################
        #Nss需要的依赖
        mkdir -p package/qca
        cp -rf ../lede/package/qca package/qca
        
        mkdir -p target/linux/qualcommax/patches-6.6
        cp -rf ../lede/target/linux/qualcommax/patches-6.1/0133-arm64-dts-ipq6018-add-reserved-memory-nodes.patch target/linux/qualcommax/patches-6.6
        cp -rf ../lede/target/linux/qualcommax/patches-6.1/0102-arm64-dts-ipq8074-add-reserved-memory-nodes.patch target/linux/qualcommax/patches-6.6
        cp -rf ../lede/target/linux/qualcommax/patches-6.1/0600-3-qca-nss-ecm-support-net-bonding.patch target/linux/qualcommax/patches-6.6
        cp -rf ../lede/target/linux/qualcommax/patches-6.1/0600-5-qca-nss-ecm-support-macvlan.patch target/linux/qualcommax/patches-6.6
        cp -rf ../lede/target/linux/qualcommax/patches-6.1/0600-8-qca-nss-ecm-support-MLO-bonding.patch target/linux/qualcommax/patches-6.6
        cp -rf ../lede/target/linux/qualcommax/patches-6.1/0603-1-qca-nss-clients-add-qdisc-support.patch target/linux/qualcommax/patches-6.6
        cp -rf ../lede/target/linux/qualcommax/patches-6.1/0603-2-qca-nss-clients-add-l2tp-support.patch target/linux/qualcommax/patches-6.6
        cp -rf ../lede/target/linux/qualcommax/patches-6.1/0603-3-qca-nss-clients-add-PPTP-support.patch target/linux/qualcommax/patches-6.6
        cp -rf ../lede/target/linux/qualcommax/patches-6.1/0603-6-qca-nss-clients-add-l2tp-offloading-support.patch target/linux/qualcommax/patches-6.6
        cp -rf ../lede/target/linux/qualcommax/patches-6.1/0603-8-qca-nss-clients-add-tls-mgr-support.patch target/linux/qualcommax/patches-6.6
        cp -rf ../lede/target/linux/qualcommax/patches-6.1/0605-qca-nss-cfi-support.patch target/linux/qualcommax/patches-6.6
        cp -rf ../lede/target/linux/qualcommax/patches-6.1/0611-ipv6-Fix-null-pointer-dereference-in-ipv6-output.patch target/linux/qualcommax/patches-6.6
        cp -rf ../lede/target/linux/qualcommax/patches-6.1/0605-qca-nss-cfi-support.patch target/linux/qualcommax/patches-6.6
        cp -rf ../lede/target/linux/qualcommax/patches-6.1/0611-ipv6-Fix-null-pointer-dereference-in-ipv6-output.patch target/linux/qualcommax/patches-6.6
        
        mkdir -p target/linux/qualcommax/files/include
        cp -rf ../lede/target/linux/qualcommax/files/include target/linux/qualcommax/files/include
        
        mkdir -p target/linux/qualcommax/files/net/netfilter
        cp -rf ../lede/target/linux/qualcommax/files/net/netfilter target/linux/qualcommax/files/net/netfilter
        
        mkdir -p target/linux/qualcommax/files/arch/arm64/boot/dts/qcom
        cp -rf ../lede/target/linux/qualcommax/files/arch/arm64/boot/dts/qcom/ipq8074-nss.dtsi target/linux/qualcommax/files/arch/arm64/boot/dts/qcom
        cp -rf $GITHUB_WORKSPACE/patch/ipq8071-ax3600.dtsi target/linux/qualcommax/files/arch/arm64/boot/dts/qcom
        cp -rf $GITHUB_WORKSPACE/patch/ipq8072-ax9000.dts target/linux/qualcommax/files/arch/arm64/boot/dts/qcom
        
        ##########################################################################################        
        #theme
        merge_package master https://github.com/immortalwrt/luci/ package themes/luci-theme-argon
        
        ##########################################################################################
        #lede 打包需要的插件
        tar zcvfp $GITHUB_WORKSPACE/outfile/lede-6.1-nss.tar.gz .
        ##########################################################################################

        
 
    - name: 上传插件源包
      uses: rmoyulong/action-gh-release@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: union_package
        files: outfile/*
        body: |
          自用插件源包！
          =============基本信息============

          作者：rmoyulong
          打包世界：${{env.OWRT_DATE}}


    - name: 清理Workflows
      uses: rmoyulong/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 1
